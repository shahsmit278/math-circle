version: 2.1
orbs:
  windows-tools: circleci/windows-tools@0.0.4
jobs:
  build:
    working_directory: ~/public
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml
  deploy:
    docker:
    - image: circleci/buildpack-deps:curl-browsers
      auth:
        username: mydockerhub-user
        password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
    - run:
        command: echo "Hello ${CIRCLE_USERNAME}"
    - run:
        command: |-
          echo "TRIGGERER: ${CIRCLE_USERNAME}"
          echo "BUILD_NUMBER: ${CIRCLE_BUILD_NUM}"
          echo "BUILD_URL: ${CIRCLE_BUILD_URL}"
          echo "BRANCH: ${CIRCLE_BRANCH}"
          echo "RUNNING JOB: ${CIRCLE_JOB}"
          echo "JOB PARALLELISM: ${CIRCLE_NODE_TOTAL}"
          echo "CIRCLE_REPOSITORY_URL: ${CIRCLE_REPOSITORY_URL}"
        name: Show some of the CircleCI runtime env vars
    - run:
        command: |-
          echo "uname:" $(uname -a)
          echo "arch: " $(arch)
        name: Show system information
    # executor:
    #   name: windows-tools/preview-default
    #   shell: bash.exe
    # machine:
    #   image: windows-default # Windows machine image
    # resource_class: windows.medium
    # steps:
    #   - checkout
    #   - run: ls -lah
    #   - run:
    #       command: echo 'This is powershell'
    #       shell: powershell.exe


    # steps:
    #     - checkout
    #     - run: systeminfo
    #     # - run:
    #     #   name: "Check docker"
    #     #   shell: powershell.exe
    #     #   command: "docker info"
        
workflows:
  build-service:
    
    jobs:
    #   - build
      - deploy
        # requires:
        #     - build
        #   filters:
        #     branches:
        #       only: test_deploy